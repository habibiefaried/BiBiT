name: BiBiT Github Action

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        pipenv install --system
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      env:
        TWITTER_NOTIFICATION: ${{ secrets.TWITTER_NOTIFICATION }}
        DISCORD_NOTIFICATION: ${{ secrets.DISCORD_NOTIFICATION }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET_KEY: ${{ secrets.TWITTER_API_SECRET_KEY }}
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        echo "export TWITTER_NOTIFICATION=${{ env.TWITTER_NOTIFICATION }}" >> .env
        echo "export TWITTER_ACCESS_TOKEN=${{ env.TWITTER_ACCESS_TOKEN }}" >> .env
        echo "export TWITTER_ACCESS_TOKEN_SECRET=${{ env.TWITTER_ACCESS_TOKEN_SECRET }}" >> .env
        echo "export TWITTER_API_KEY=${{ env.TWITTER_API_KEY }}" >> .env
        echo "export TWITTER_API_SECRET_KEY=${{ env.TWITTER_API_SECRET_KEY }}" >> .env
        echo "export DISCORD_NOTIFICATION=${{ env.DISCORD_NOTIFICATION }}" >> .env
        echo "export DISCORD_WEBHOOK_URL=${{ env.DISCORD_WEBHOOK_URL }}" >> .env
        echo "export DATA_DIR=$(pwd)/data" >> .env
        source ~/.bashrc
        python -m src.test.envTest
    - name: ssh deploy
      if: startsWith( github.ref, 'refs/tags/')
      uses: JimCronqvist/action-ssh@master
      with:
        hosts: 'root@${{ secrets.REMOTE_HOST }}'
        privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
        debug: true
        command: |
          cd ~/BiBiT
          git reset --hard
          git fetch --all
          git fetch --tags
          latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
          git checkout $latestTag
          fit pull origin $latestTag
          pipenv install --system
          pm2 stop BiBiT
          pm2 del BiBiT
          rm .env
          echo "export TWITTER_NOTIFICATION=${{ secrets.TWITTER_NOTIFICATION }}" >> .env
          echo "export TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }}" >> .env
          echo "export TWITTER_ACCESS_TOKEN_SECRET=${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}" >> .env
          echo "export TWITTER_API_KEY=${{ secrets.TWITTER_API_KEY }}" >> .env
          echo "export TWITTER_API_SECRET_KEY=${{ secrets.TWITTER_API_SECRET_KEY }}" >> .env
          echo "export DISCORD_NOTIFICATION=${{ secrets.DISCORD_NOTIFICATION }}" >> .env
          echo "export DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" >> .env
          echo "export DATA_DIR=$(pwd)/data" >> .env
          python3 -m src.test.envTest
          rm run.sh
          touch run.sh
          echo "#!/bin/bash" >> run.sh
          echo "source ~/.bashrc" >> run.sh
          echo "pm2 start src/main.py --interpreter python3 --name BiBiT --ignore-watch ./data" >> run.sh
          chmod +x run.sh
          bash run.sh
          